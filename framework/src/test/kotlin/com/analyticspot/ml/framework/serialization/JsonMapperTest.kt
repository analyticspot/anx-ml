/*
 * Copyright (C) 2017 Analytic Spot.
 * 
 * This file is part of the ANX ML library.
 * 
 * The ANX ML library is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
 * General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 * 
 * Foobar is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License along with the ANX ML libarary.  If not, see
 * <http://www.gnu.org/licenses/>.
 */

package com.analyticspot.ml.framework.serialization

import org.assertj.core.api.Assertions.assertThat
import org.testng.annotations.Test
import java.io.FileOutputStream
import kotlin.reflect.KClass

class JsonMapperTest {
    // See the KClass module in JsonMapper for info on why we're testing this.
    @Suppress("PLATFORM_CLASS_MAPPED_TO_KOTLIN")
    @Test
    fun testKClassSerDeser() {
        // A variety of Kotlin-specific types
        serAndDeser(Int::class)
        serAndDeser(Long::class)
        serAndDeser(String::class)

        // Some non-Kotlin types
        serAndDeser(java.lang.String::class)
        serAndDeser(FileOutputStream::class)
        serAndDeser(Runnable::class)

        // A mix of Kotlin and non-Kotlin types generated by instances.
        val s = "Hello there"
        serAndDeser(s.javaClass.kotlin)
        val i = 88
        serAndDeser(i.javaClass.kotlin)
        val sb = StringBuilder()
        serAndDeser(sb.javaClass.kotlin)
    }

    // Used by testKClassSerDeser
    private fun serAndDeser(clazz: KClass<*>) {
        val serialized = JsonMapper.mapper.writeValueAsString(clazz)
        val deserialized = JsonMapper.mapper.readValue(serialized, KClass::class.java)

        assertThat(clazz).isEqualTo(deserialized)
    }
}

