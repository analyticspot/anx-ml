package com.analyticspot.ml.framework.description

/**
 * A [ValueIdGroup] is the id for a group of tokens. This allows you to map that to the actual tokens. Note that some
 * of the functions here may throw an exception if they're called before the underlying data transform has been trained
 * and the tokens are known. See [ValueIdGroup] for details.
 */
interface ValueTokenGroup<DataT> {
    /**
     * The id for this [ValueTokenGroup]
     */
    val id: ValueIdGroup<DataT>

    /**
     * The name of the token group. For [ValueTokenGroup] instances that represent as set of features generated by
     * an algorithm the corresponding tokens are, by convention, named `{name}-{suffix}` where `{name}` is this value
     * and suffix is an algorithm-specific, per-value identifier. For example, as transform that parses `String` into
     * words might create tokens with `{suffix}` equal to the corresponding word (e.g. if the group was "words" then
     * the tokens might be "words-hello", "words-goodbye", etc.).
     */
    val name: String
        get() = id.name

    /**
     * The data type for all [ValueToken] instances in [tokens].
     */
    val clazz: Class<DataT>
        get() = id.clazz

    /**
     * Returns the number of tokens in this group. Generally not available until producing transform has been trained.
     */
    fun numTokens(): Int

    /**
     * Returns the list of tokens in [tokens] in this group. Generally not available until the producing transform has
     * been trained.
     */
    fun tokens(): List<ValueToken<DataT>>

    /**
     * Returns the tokens in [tokens] as a `Set`. Generally not available until the producing transform has been
     * trained.
     */
    fun tokenSet(): Set<ValueToken<DataT>>
}
